<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="JudaMap">
	
	<select id="getGoodsList" parameterType="GoodsTypeVO" resultType="GoodsVO">
		SELECT * 
		FROM GOODS
		<if test="goods_type!='전체'">
		WHERE goods_type = #{goods_type}
		</if>
		ORDER BY ${goods_sort}
	</select>

	<insert id="insertMember" parameterType="MemberVO">
		INSERT INTO Member (member_id, password, name, gender, tel, email, birth, signin_date, agree_email, agree_sns) 
		VALUES (#{member_id}, #{password}, #{name}, #{gender}, #{tel}, #{email}, #{birth}, sysdate, #{agree_email}, #{agree_sns})
	</insert>

	<select id="selectLogin" parameterType="LoginVO" resultType="int">
		SELECT			count(*)
		FROM			Member
		WHERE			member_id = #{member_id} AND password = #{password}
	</select>

	<select id="getGoods" parameterType="Integer" resultType="GoodsVO">
      SELECT * FROM Goods
      WHERE goods_id = #{goods_id}
   	</select>
 
 	<!-- 같은 상품을 또 넣을지 확인 -->  	
   	<select id="checkCart" parameterType="CartRowVO" resultType="String">
		SELECT count(*)
		FROM Cart
		WHERE member_id = #{member_id} AND goods_id = #{goods_id}
	</select>

	<!-- 장바구니에 넣기  -->
	<insert id="insertCart" parameterType="CartRowVO">
		INSERT INTO Cart
		VALUES (seq_cart.nextval, #{member_id}, #{goods_id}, #{c_amount})
	</insert>
	
	<!-- 장바구니의 상품의 수량만 바꾸기 -->
	<update id="updateCart" parameterType="CartRowVO">
		UPDATE Cart
		SET c_amount = c_amount + #{c_amount}
		WHERE member_id = #{member_id} AND goods_id = #{goods_id}
	</update>
	
	<!-- 장바구니를 띄울 때 필요한 정보 가져오기 -->
	<select id="getCart" parameterType="Integer" resultType="CartVO">
		SELECT c.C_AMOUNT AS C_AMOUNT, g.goods_id goods_id, g.GOODS_NAME GOODS_NAME, g.IMG_FILE IMG_FILE, g.PRICE PRICE, g.DELIVERY_CHARGE DELIVERY_CHARGE
		FROM Cart c INNER JOIN GOODS g 		ON c.GOODS_ID = g.GOODS_ID
					INNER JOIN "MEMBER" m 	ON c.MEMBER_ID = m.MEMBER_ID
		WHERE m.MEMBER_ID = #{member_id}
	</select>
   	
	<delete id="deleteCart" parameterType="CartRowVO">
		DELETE FROM Cart 
		WHERE member_id = #{member_id} AND goods_id = #{goods_id}
	</delete>
	
<!-- ===================================================================================== -->

	<!--==== 결제창 ====-->
	
	<!-- 카트의 상품 목록을 결제창에 띄우기 -->
	<select id="getPayCart" parameterType="Integer" resultType="CartVO">
		SELECT c.C_AMOUNT AS C_AMOUNT, g.goods_id goods_id, g.GOODS_NAME GOODS_NAME, g.IMG_FILE IMG_FILE, g.PRICE PRICE, g.DELIVERY_CHARGE DELIVERY_CHARGE
		FROM Cart c INNER JOIN GOODS g 		ON c.GOODS_ID = g.GOODS_ID
					INNER JOIN "MEMBER" m 	ON c.MEMBER_ID = m.MEMBER_ID
		WHERE m.MEMBER_ID = #{member_id} AND g.goods_id in
		<foreach collection="" item="" index="" open="(" separator="," close=")">>
		
		</foreach>
	</select>
	
	<!-- 결제할 상품을 바로 결제창에 띄우기 -->
	<select id="getPayOne" parameterType="Integer" resultType="CartVO">
		SELECT goods_id, img_file, goods_name, price, delivery_charge
		FROM Goods
		WHERE member_id = #{member_id}
	</select>
	
	<!-- 회원 정보를 결제창에 올리기 -->
	<select id="getMember" parameterType="Integer" resultType="HashMap">
		SELECT name, tel, email
		FROM Member
		WHERE member_id = #{member_id}
	</select>
	
	
<!-- 로그인 안 할 경우 카트 접근 금지 -->

<!-- 	<insert id="insertDelivery" parameterType="PayVO"> -->
<!--     	  INSERT INTO DELIVERY -->
<!--     	  VALUES (delivery_seq.nextval, #{delivery_name}, #{receiver}, #{delivery_tel}, #{postcode}, #{addr}, -->
<!--     	   			   #{addr_detail}, #{delivery_memo}) -->
<!--    	</insert> -->
   
<!--    <insert id="insertOrderList" parameterType="PayVO"> -->
<!--       INSERT INTO ORDERLIST -->
<!--       VALUES (orderlist_seq.nextval, '결제완료', sysdate, #{o_sum}, #{member_id}) -->
<!--    </insert> -->

	<!-- ##### 게시판 ##### -->
	


</mapper>